import { useEffect, useState } from "react";
import "./App.css";

import "bootstrap/dist/css/bootstrap.css";
import Web3 from "web3";

function App() {
	const [account, setAccount] = useState();
	const [balance, setBalance] = useState();
	const [network, setNetwork] = useState();

	// when the app loads, get the user's account
	useEffect(() => {
		const web3 = new Web3(Web3.givenProvider || "http://localhost:8545");
		async function getAccount() {
			const accounts = await web3.eth.getAccounts();
			console.log(accounts);
			setAccount(accounts[0]);
		}

		async function loadBalance() {
			const network = await web3.eth.net.getNetworkType();
			const balance = await web3.eth.getBalance(account);

			setNetwork(network);
			setBalance(web3.utils.fromWei(balance, "ether"));
		}

		getAccount();
		loadBalance();
	}, [account, balance, network]);


	/* const address = "0x88672EE840497384258413Cc40bb3f44a7248C6b";
	const abi = [
		[
			{
				constant: false,
				inputs: [
					{
						name: "_itemId",
						type: "uint256",
					},
				],
				name: "bid",
				outputs: [],
				payable: true,
				stateMutability: "payable",
				type: "function",
			},
			{
				constant: false,
				inputs: [],
				name: "revealWinners",
				outputs: [],
				payable: false,
				stateMutability: "nonpayable",
				type: "function",
			},
			{
				constant: false,
				inputs: [],
				name: "withdrawFunds",
				outputs: [],
				payable: false,
				stateMutability: "nonpayable",
				type: "function",
			},
			{
				inputs: [],
				payable: true,
				stateMutability: "payable",
				type: "constructor",
			},
			{
				constant: true,
				inputs: [],
				name: "bidAmount",
				outputs: [
					{
						name: "",
						type: "uint256",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [
					{
						name: "",
						type: "uint256",
					},
				],
				name: "bidders",
				outputs: [
					{
						name: "personId",
						type: "uint256",
					},
					{
						name: "addr",
						type: "address",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [],
				name: "getItemsWon",
				outputs: [
					{
						name: "",
						type: "uint256",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [],
				name: "getNumTokens",
				outputs: [
					{
						name: "",
						type: "uint256[]",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [
					{
						name: "",
						type: "uint256",
					},
				],
				name: "items",
				outputs: [
					{
						name: "itemId",
						type: "uint256",
					},
					{
						name: "name",
						type: "string",
					},
					{
						name: "hasWinner",
						type: "bool",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [],
				name: "owner",
				outputs: [
					{
						name: "",
						type: "address",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [
					{
						name: "",
						type: "uint256",
					},
				],
				name: "winners",
				outputs: [
					{
						name: "addr",
						type: "address",
					},
					{
						name: "itemId",
						type: "uint256",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
			{
				constant: true,
				inputs: [],
				name: "winnersDrawn",
				outputs: [
					{
						name: "",
						type: "bool",
					},
				],
				payable: false,
				stateMutability: "view",
				type: "function",
			},
		],
	];
 */
	// const contract = new web3.eth.Contract(abi, address);

	return (
		<div className="App">
			<header className="App-header">
				<h1 className="">Lottery - Ballot</h1>
				{/* <h2>Owner: {owner}</h2> */}
				{/* <h2>Balance: {balance} ether</h2> */}
				<h2>Account: {account}</h2>
				<h2>
					Balance({network}): {balance} ether
				</h2>
			</header>
		</div>
	);
}

export default App;
